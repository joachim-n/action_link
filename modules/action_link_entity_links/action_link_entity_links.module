<?php

/**
 * @file
 * Contains hook implementations for the Action Link Entity Links module.
 */

use Drupal\Core\Render\Element;
use Drupal\node\NodeInterface;

/**
 * Implements hook_node_links_alter().
 */
function action_link_entity_links_node_links_alter(array &$links, NodeInterface $entity, array &$context) {
  // TODO - view modes need to be a setting
  $view_mode = $context['view_mode'];

  $user = \Drupal::currentUser();
  // $action_link_entities = \Drupal::service('entity_type.manager')->getStorage('action_link')->loadMultiple();
  // $action_link_entity = \Drupal::service('entity_type.manager')->getStorage('action_link')->load('fuck_bool');
  $action_link_entity = \Drupal::service('entity_type.manager')->getStorage('action_link')->load('has_date');

  $state_action_plugin = $action_link_entity->getStateActionPlugin();
  $action_links = $state_action_plugin->buildLinkArray(
    $action_link_entity,
    $user,
    [
      'entity' => $entity->id(),
    ],
  );
  dsm($action_links);

  $action_link_links = [];
  foreach (Element::children($action_links) as $direction) {
    $action_link_links['action_link' . ':' . $action_link_entity->id() . ':' . $direction] = [
      'title' => $action_links[$direction]['#link']['#title'],
      'url' => $action_links[$direction]['#link']['#url'],
      // ARGH we can't set $li_attributes FUCK FUCK
      // need to copy $action_links['dec']['#link']['#attributes']
      // AND stash $action_links['dec']['#attributes']
      // for our PP func to move to the LI.
      'attributes' => [
        'class' => [
          // 'single',
          'inline',
          $direction,
        ],
      ],
    ];
  }

  $links['action_link'] = [
    '#theme' => 'links__node__action_link',
    '#links' => $action_link_links,
  ];

  // $links['mymodule'] = [
  //   '#theme' => 'links__node__mymodule',
  //   '#attributes' => ['class' => ['links', 'inline']],
  //   '#links' => [
  //     'node-report' => [
  //       'title' => t('Report'),
  //       'url' => Url::fromRoute('node_test.report', ['node' => $entity->id()], ['query' => ['token' => \Drupal::getContainer()->get('csrf_token')->get("node/{$entity->id()}/report")]]),
  //     ],
  //   ],
  // ];


  $links['dummy'] = [
    '#theme' => 'links__node__statistics',
    '#links' => [
      'foo' => [
        'title' => 'OH YEAH THIS IS A LINK',
      ],
    ],
    '#attributes' => ['class' => ['links', 'inline']],
  ];


  // // TODO: for each action link with this set.
  // // TODO: does it apply to this node bundle?
  // // TODO: key.
  // $links['mymodule'] = [
  //   '#theme' => 'links', // TODO
  //   '#attributes' => ['class' => ['links', 'inline']],
  //   '#links' => [
  //     'node-report' => [
  //       'title' => t('Report'),
  //       'url' => Url::fromRoute('node_test.report', ['node' => $entity->id()], ['query' => ['token' => \Drupal::getContainer()->get('csrf_token')->get("node/{$entity->id()}/report")]]),
  //     ],
  //   ],
  // ];


  // $links =
}

/**
 * Implements hook_preprocess_HOOK() for links.
 */
function action_link_entity_links_preprocess_links(&$variables) {
  // Add LI classes here because AAAAARRRRRRRRGH there is no way to set them
  // with #theme links.
  // See https://www.drupal.org/project/drupal/issues/3436073.
  foreach ($variables['links'] as $key => &$link) {
    $classes = $link['attributes']['class'] ?? [];
    $classes[] = 'cake';
    $link['attributes']['class'] = $classes;
  }
}
