<?php

/**
 * @file
 * Contains hook implementations for the Action Link Field module.
 */

use Drupal\action_link\Plugin\StateAction\EntityFieldStateActionBase;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter(): action_link_form.
 */
function action_link_field_form_action_link_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // return;
  // dsm($form_id);
  // dsm($form_state->getValues());
  // dsm($form);

  $action_link_plugin_id = $form['plugin']['#default_value']['plugin_id'];

  // Bail on an 'add' form where the plugin ID is not yet set.
  if (empty($action_link_plugin_id)) {
    return;
  }

  $plugin_definition = \Drupal::service('plugin.manager.action_link_state_action')->getDefinition($action_link_plugin_id);
  // dsm($plugin_definition);
  if (!is_subclass_of($plugin_definition['class'], EntityFieldStateActionBase::class)) {
    return;
  }
  // TODO: check only 1 dynamic parameter. we won't know what to do with more.

  $form['plugin']['container']['computed_field'] = [
    '#type' => 'checkbox',
    '#title' => t('Show as field'),
    '#description' => t('If selected, a computed field on the target entity type is automatically defined.'),
    // '#default_value' => $action_link->get('computed_field'),
    '#weight' => 100,
  ];


  $form['actions']['submit']['#submit'][] = 'action_link_field_form_action_link_form_submit';

  $form['#entity_builders'][] = 'action_link_field_form_action_link_form_entity_builder';
  // dsm($form_id);
  // $form['id'] = [
  //   '#markup' => $action_link_plugin_id,
  // ];

}

function action_link_field_form_action_link_form_entity_builder($entity_type, EntityInterface $entity, array $form, FormStateInterface $form_state) {
  $entity->setThirdPartySetting('action_link_field', 'computed_field', $form_state->getValue(['plugin', 'computed_field']));
}

function action_link_field_form_action_link_form_submit(array $form, FormStateInterface $form_state) {
  // TODO: submit form
  // needs
  //     \Drupal::service('entity_field.manager')->clearCachedFieldDefinitions();
  // and clear CF plugin defs.
  //     \Drupal::service('entity_field.manager')->clearCachedDefinitions();

}

